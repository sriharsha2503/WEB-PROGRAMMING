✅ Q3. CGPA Calculation Using Django Sessions
🎯 Requirement:
Page 1: Two text boxes (name, total marks) + Calculate button.

On submit → Page 2 shows Welcome {name}, Your CGPA = total_marks / 50.

📁 File Structure:
Copy
Edit
cgpaapp/
├── forms.py
├── views.py
├── templates/
│   └── cgpaapp/
│       ├── page1.html
│       └── page2.html
🧾 cgpaapp/forms.py
python
Copy
Edit
from django import forms

class CGPAForm(forms.Form):
    name = forms.CharField(max_length=100)
    total_marks = forms.IntegerField()
⚙️ cgpaapp/views.py
python
Copy
Edit
from django.shortcuts import render, redirect
from .forms import CGPAForm

def page1(request):
    if request.method == 'POST':
        form = CGPAForm(request.POST)
        if form.is_valid():
            name = form.cleaned_data['name']
            total = form.cleaned_data['total_marks']
            request.session['name'] = name
            request.session['cgpa'] = total // 50
            return redirect('page2')
    else:
        form = CGPAForm()
    return render(request, 'cgpaapp/page1.html', {'form': form})

def page2(request):
    name = request.session.get('name', 'Unknown')
    cgpa = request.session.get('cgpa', 0)
    return render(request, 'cgpaapp/page2.html', {'name': name, 'cgpa': cgpa})
🌐 urls.py
python
Copy
Edit
from django.urls import path
from cgpaapp import views

urlpatterns = [
    path('', views.page1, name='page1'),
    path('result/', views.page2, name='page2'),
]
🖼️ page1.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h3>Enter Student Details</h3>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Calculate</button>
</form>
</body>
</html>
🖼️ page2.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h3>Welcome {{ name }}</h3>
<p>Your CGPA is = {{ cgpa }}</p>
</body>
</html>
✅ Q1. Register & Success Page (Secure Form)
🧾 registerapp/forms.py
python
Copy
Edit
from django import forms

class RegisterForm(forms.Form):
    username = forms.CharField(max_length=100)
    password = forms.CharField(widget=forms.PasswordInput())
    email = forms.EmailField(required=False)
    contact = forms.CharField(required=False)
⚙️ registerapp/views.py
python
Copy
Edit
from django.shortcuts import render, redirect
from .forms import RegisterForm

def register(request):
    if request.method == 'POST':
        form = RegisterForm(request.POST)
        if form.is_valid():
            request.session['username'] = form.cleaned_data['username']
            request.session['email'] = form.cleaned_data['email']
            request.session['contact'] = form.cleaned_data['contact']
            return redirect('success')
    else:
        form = RegisterForm()
    return render(request, 'registerapp/register.html', {'form': form})

def success(request):
    return render(request, 'registerapp/success.html', {
        'username': request.session.get('username', 'Guest'),
        'email': request.session.get('email', ''),
        'contact': request.session.get('contact', '')
    })
🖼️ register.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h2>Register</h2>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Submit</button>
</form>
</body>
</html>
🖼️ success.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h3>Welcome {{ username }}</h3>
<p>Email: {{ email }}</p>
<p>Contact Number: {{ contact }}</p>
</body>
</html>
✅ Q2. Book Rating with Voting Result in %
This question would need a basic session-based voting app.

🧾 voteapp/forms.py
python
Copy
Edit
from django import forms

class VoteForm(forms.Form):
    CHOICES = [
        ('good', 'Good'),
        ('satisfactory', 'Satisfactory'),
        ('bad', 'Bad')
    ]
    vote = forms.ChoiceField(choices=CHOICES, widget=forms.RadioSelect)
⚙️ voteapp/views.py
python
Copy
Edit
from django.shortcuts import render
from .forms import VoteForm

votes = {'good': 0, 'satisfactory': 0, 'bad': 0}

def vote_view(request):
    if request.method == 'POST':
        form = VoteForm(request.POST)
        if form.is_valid():
            selected = form.cleaned_data['vote']
            votes[selected] += 1
            total = sum(votes.values())
            percentages = {k: (v * 100) // total for k, v in votes.items()}
            return render(request, 'voteapp/results.html', {'percentages': percentages})
    else:
        form = VoteForm()
    return render(request, 'voteapp/vote.html', {'form': form})
🖼️ vote.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h3>How is the book ASP.NET with C# by Vipul Prakashan?</h3>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Vote</button>
</form>
</body>
</html>
🖼️ results.html
html
Copy
Edit
<!DOCTYPE html>
<html>
<body>
<h3>Voting Results</h3>
<p>Good: {{ percentages.good }}%</p>
<p>Satisfactory: {{ percentages.satisfactory }}%</p>
<p>Bad: {{ percentages.bad }}%</p>
</body>
</html>
